---
const { slug, name } = Astro.props
const inputDisabled = name ? true : false
---

<div class='rsvp' id='rsvp'>
  <h2 class='rsvp__title heading-2'>RSVP</h2>
  <p>
    Por favor, confirma tu asistencia antes del 08 de Noviembre. Agradecemos tu
    pronta respuesta para ayudarnos con la planificación del evento
  </p>

  <p id='form-message' class='hidden'></p>
  <form method='POST' id='rsvp-form'>
    <label>
      <span class='label'>Tu nombre</span>
      <input
        type='text'
        name='name'
        id='name'
        required
        value={name}
        readonly={inputDisabled}
      />
    </label>

    <fieldset>
      <legend class='label'>¿Asistirás?</legend>

      <div class='radio-wrapper'>
        <input type='radio' id='yes' name='attending' value='Yes' required />
        <label for='yes'>Sí</label>
      </div>

      <div class='radio-wrapper'>
        <input type='radio' id='no' name='attending' value='No' />
        <label for='no'>No</label>
      </div>
    </fieldset>

    <label>
      <span class='label'>Notas (opcional)</span>
      <textarea name='notes' id='notes'></textarea>
    </label>

    <input type='hidden' name='slug' value={slug} />

    <button
      id='form-button'
      type='submit'
      class='rsvp__button'>
      <span id='form-button-text' class='rsvp__button-text'> ENVIAR </span>
    </button>
  </form>
</div>

<style>
  .rsvp {
    margin-block-end: 2rem;
  }

  p {
    margin-block-end: 1rem;
  }

  form {
    text-align: left;
    display: grid;
    gap: 1rem;
  }

  .rsvp__button {
    border: none;
    background-color: var(--color-black);
    color: var(--color-white);
    padding: 0.25rem;
    border-radius: 0.25rem;
    font-weight: 700;
    cursor: pointer;
    width: 100%;
    border: 0.125rem solid currentColor;
    transition: all 200ms ease-in;
    position: relative;

    display: flex;
    justify-content: center;
    align-items: center;
    gap: 1rem;

    &:hover,
    &:focus-visible {
      color: var(--color-black);
      background-color: var(--color-white);
    }

    &:active {
      background-color: var(--color-gray);
    }
  }

  .rsvp__button--loading::after {
    content: '';
    width: 1rem;
    height: 1rem;
    inset: 0;
    border: 0.25rem solid transparent;
    border-top-color: currentColor;
    border-radius: 50%;
    animation: button-loading-spinner 1s ease infinite;
  }

  fieldset {
    border: 0;
    margin: 0;
    padding: 0;
    display: flex;
    justify-content: flex-start;
    gap: 1rem;
  }

  .label {
    display: block;
    font-weight: 700;
  }

  .radio-wrapper {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  input[type='text'],
  textarea {
    width: 100%;
    resize: vertical;
    padding: 0.25rem;
    border-radius: 0.25rem;
    border: 0.125rem solid currentColor;
  }

  input[type='radio'] {
    accent-color: var(--color-green);
  }

  input:read-only {
    padding: 0;
    border: 0;

    &:hover,
    &:focus,
    &:focus-visible,
    &:active {
      outline: none;
    }
  }

  .error {
    color: var(--color-red);
  }

  .successBanner {
    background-color: var(--color-green);
    border-radius: 0.25rem;
    padding: 0.5rem;
    color: var(--color-white);
    margin-block-end: 1rem;
    font-weight: 700;
  }

  .errorBanner {
    background-color: var(--color-red);
    border-radius: 0.25rem;
    padding: 0.5rem;
    color: var(--color-white);
    margin-block-end: 1rem;
    font-weight: 700;
  }

  @keyframes button-loading-spinner {
    from {
      transform: rotate(0turn);
    }

    to {
      transform: rotate(1turn);
    }
  }
</style>

<script>
  const form = document.getElementById('rsvp-form')
  const formMessage = document.getElementById('form-message')
  const button = document.getElementById('form-button')
  const buttonText = document.getElementById('form-button-text')

  form.addEventListener('submit', async function (e) {
    e.preventDefault()
    const formData = new FormData(e.target)

    formMessage.classList.add('hidden')
    button.classList.add('rsvp__button--loading')
    button.disabled = true
    buttonText.innerHTML = 'Enviando'

    const object = {}
    formData.forEach((value, key) => (object[key] = value))
    const json = JSON.stringify(object)

    try {
      const response = await fetch('api/submit-google-form', {
        method: 'POST',
        body: json,
        headers: { 'Content-Type': 'application/json' },
      })

      const data = await response.json()

      formMessage.innerHTML = data.message

      if (response.status === 200) {
        formMessage.classList.add('successBanner')
        formMessage.classList.remove('errorBanner')
        formMessage.classList.remove('hidden')

        form.reset()
      } else {
        formMessage.classList.add('errorBanner')
        formMessage.classList.remove('successBanner')
        formMessage.classList.remove('hidden')
      }
    } catch (e) {
      console.log(e)
      formMessage.innerHTML =
        'Se mensaje no pudo ser enviado debido a un error en el navegador.'

      formMessage.classList.add('errorBanner')
      formMessage.classList.remove('successBanner')
      formMessage.classList.remove('hidden')
    }

    button.classList.remove('rsvp__button--loading')
    button.disabled = false;
    buttonText.innerHTML = 'Enviar'
  })
</script>
